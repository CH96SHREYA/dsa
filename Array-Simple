/////////////// Missing number in array ///////////////////////////////////
 public static void findingMissing(int [] a,int n)
    {  
        int sum=(n*(n+1))/2,sum_arr=0;
        for(int i=0;i<n-1;i++)
          sum_arr+=a[i];        
        System.out.println(sum-sum_arr);
        
    }
    
    
//////////////////////////  First Repeating Element////////////////////////////////////
public static int findFirstRepeat(int []A,int n){
        int min=-2;
        ArrayList<Integer> hash=new ArrayList<>();
        for(int i=A.length-1;i>=0;i--){
            if(hash.contains(A[i]))
                min=i;
            else
                hash.add(A[i]);
        }
        
        return min+1;
    }
    
//////////////////////////////Program to find the largest three elements in O(n) time and  O(1) space complexity/////////////
public static  void findThree(int [] A){
        int first=Integer.MIN_VALUE;
        int second=Integer.MIN_VALUE;
        int third=Integer.MIN_VALUE;
        
        for(int i=0;i<A.length;i++){
            if(A[i]>first){
                third=second;
                second=first;
                first=A[i];
            }
             else if(A[i]>second){
                 third=second;
                 second=A[i];
             }
             
             else if(A[i]>third)
                third=A[i];
             
             else
                continue;
        }
        
        System.out.println("first: "+ first +" second: "+second+" third: "+third);
        
    }
