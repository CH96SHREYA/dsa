class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
         List<Integer> list=new ArrayList<>();
        if(matrix==null  ||matrix.length==0)
            return list;
       
        int top=0; int bottom=matrix.length-1;
        int left=0; int right=matrix[0].length-1;
        int direct=0;
        while(top<=bottom && left<=right){
          //right  
            if(direct==0){
                for(int i=left;i<=right;i++)
                    list.add(matrix[top][i]);
                top++;
                
            }
           //bottom 
            if(direct==1){
                 for(int i=top;i<=bottom;i++)
                    list.add(matrix[i][right]);
                right--;
            }
           //left 
            if(direct==2){
                 for(int i=right;i>=left;i--)
                     list.add(matrix[bottom][i]);
                bottom--;
                
            }
           //up 
            if(direct==3){
                for(int i=bottom;i>=top;i--)
                     list.add(matrix[i][left]);
                left++;           
                
            }              
            
            direct=(direct+1)%4;
        }
        return list;
    }
}
